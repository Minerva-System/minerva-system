name: Automated tests

on:
  pull_request:
    branches: [master]
  workflow_dispatch:

jobs:
  run-tests:
    runs-on: ubuntu-latest
    environment: gh-actions

    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_PORT: 5432
        ports:
          - 5432:5432

      mongodb:
        image: mongo:5
        env:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: mongo
        ports:
          - 27017:27017

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379

      rabbitmq:
        image: rabbitmq:3-management-alpine
        env:
          RABBITMQ_DEFAULT_USER: rabbitmq
          RABBITMQ_DEFAULT_PASS: minerva
        ports:
          - 5672:5672
          - 15672:15672

    steps:
      - name: Install misc dependencies
        run: |
          sudo apt update
          sudo apt install -y libpq5 unzip

      - name: Install Protocol Buffers compiler
        run: |
          wget https://github.com/protocolbuffers/protobuf/releases/download/v21.7/protoc-21.7-linux-x86_64.zip
          mv protoc-*.zip protoc.zip
          unzip protoc.zip && rm -r protoc.zip readme.txt
          sudo mv bin/protoc /usr/local/bin/protoc
          sudo mv include/* /usr/local/include
          rm -r bin include
          protoc --version
          
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1.0.6
        with:
          toolchain: 1.65.0
          components: clippy, rustfmt

      - name: Install LLVM-Cov and Nextest
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-llvm-cov@0.5.3,cargo-nextest@0.9.47

      - name: Rust build cache
        uses: Swatinem/rust-cache@v2

      - name: Linter
        run: cargo fmt -- --check

      - name: Clippy & Warnings
        run: cargo clippy -- -D clippy::all &> ./clippy.report
        env:
          RUSTFLAGS: -D warnings

      - name: Run database migrations
        run: cargo run --bin minerva-runonce
      
      - name: Run tests & generate coverage
        run: cargo llvm-cov nextest --all-features --workspace --lcov --output-path ./lcov.info
        env:
          LLVM_COV_FLAGS: -r -s=/home/runner/work/minerva-system/minerva-system/

      - name: Connect to Tailscale network
        uses: tailscale/github-action@main
        with:
          authkey: ${{ secrets.TAILSCALE_AUTHKEY }}
        
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      
