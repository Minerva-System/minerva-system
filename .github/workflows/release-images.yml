name: Release images

on:
  pull_request:
    branches:
      - master

env:
  PLATFORMS: 'linux/amd64,linux/arm64'
    
jobs:
  docker:
    runs-on: ubuntu-latest
    environment: gh-actions

    steps:
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: amd64,arm64

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Checkout repository
        uses: actions/checkout@v3

      # Ensure pushes to Docker only when creating tags
      - name: Set push flag
        run: |
          if ${{ github.event-name == 'push' && contains(github.ref, 'refs/tags/') }};
          then
              echo "PUSHFLAG=--push" >> $GITHUB_ENV
          else
              echo "PUSHFLAG=" >> $GITHUB_ENV
          fi

      - name: Prepare Rust Base image
        run: |
          docker buildx build -f build/Dockerfile \
          --cache-to type=gha \
          --cache-from type=gha \
          --platform=$PLATFORMS \
          --target rust_base \
          .

      - name: Prepare Cargo Chef cache image
        run: |
          docker buildx build -f build/Dockerfile \
          --cache-to type=gha \
          --cache-from type=gha \
          --platform=$PLATFORMS \
          --target chef \
          .

      - name: Build all modules
        run: |
          docker buildx build -f build/Dockerfile \
          --cache-to type=gha \
          --cache-from type=gha \
          --platform=$PLATFORMS \
          --target builder \
          .
          
      - name: Build and push REST
        run: |
          TARGET="minerva_rest"

          DIRNAME=${TARGET/_/-}
          IMGNAME="luksamuk/$DIRNAME"
          IMGVERSION=`awk '/^version/{print $3}' ./$DIRNAME/Cargo.toml | tr -d '"'`
          
          docker buildx build -f build/Dockerfile \
          --cache-to type=gha \
          --cache-from type=gha \
          --platform=$PLATFORMS \
          --target $TARGET \
          -t $IMGNAME:$IMGVERSION \
          -t $IMGNAME:latest \
          $PUSHFLAG \
          .

      - name: Build and push RUNONCE
        run: |
          TARGET="minerva_runonce"

          DIRNAME=${TARGET/_/-}
          IMGNAME="luksamuk/$DIRNAME"
          IMGVERSION=`awk '/^version/{print $3}' ./$DIRNAME/Cargo.toml | tr -d '"'`
          
          docker buildx build -f build/Dockerfile \
          --cache-to type=gha \
          --cache-from type=gha \
          --platform=$PLATFORMS \
          --target $TARGET \
          -t $IMGNAME:$IMGVERSION \
          -t $IMGNAME:latest \
          $PUSHFLAG \
          .

      - name: Build and push SESSION
        run: |
          TARGET="minerva_session"

          DIRNAME=${TARGET/_/-}
          IMGNAME="luksamuk/$DIRNAME"
          IMGVERSION=`awk '/^version/{print $3}' ./$DIRNAME/Cargo.toml | tr -d '"'`
          
          docker buildx build -f build/Dockerfile \
          --cache-to type=gha \
          --cache-from type=gha \
          --platform=$PLATFORMS \
          --target $TARGET \
          -t $IMGNAME:$IMGVERSION \
          -t $IMGNAME:latest \
          $PUSHFLAG \
          .

      - name: Build and push USER
        run: |
          TARGET="minerva_user"

          DIRNAME=${TARGET/_/-}
          IMGNAME="luksamuk/$DIRNAME"
          IMGVERSION=`awk '/^version/{print $3}' ./$DIRNAME/Cargo.toml | tr -d '"'`
          
          docker buildx build -f build/Dockerfile \
          --cache-to type=gha \
          --cache-from type=gha \
          --platform=$PLATFORMS \
          --target $TARGET \
          -t $IMGNAME:$IMGVERSION \
          -t $IMGNAME:latest \
          $PUSHFLAG \
          .

      - name: Build and push DISPATCH
        run: |
          TARGET="minerva_dispatch"

          DIRNAME=${TARGET/_/-}
          IMGNAME="luksamuk/$DIRNAME"
          IMGVERSION=`awk '/^version/{print $3}' ./$DIRNAME/Cargo.toml | tr -d '"'`
          
          docker buildx build -f build/Dockerfile \
          --cache-to type=gha \
          --cache-from type=gha \
          --platform=$PLATFORMS \
          --target $TARGET \
          -t $IMGNAME:$IMGVERSION \
          -t $IMGNAME:latest \
          $PUSHFLAG \
          .

