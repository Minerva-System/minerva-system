var searchIndex = JSON.parse('{\
"minerva_broker":{"doc":"This is a library for working with routines related to the …","t":[17,17,6,17,5,5,5,5,5,5,0,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12],"n":["AUTH_PASS","AUTH_USER","LapinPool","QUEUES","build_broker_uri","check_virtual_host","make_connection","make_connection_pool","make_vhost_url","make_virtual_host","model","Remove","SessionMessage","borrow","borrow_mut","clone","clone_into","deserialize","fmt","from","from","into","serialize","to_json","to_owned","try_from","try_into","type_id","user"],"q":["minerva_broker","","","","","","","","","","","minerva_broker::model","","","","","","","","","","","","","","","","","minerva_broker::model::SessionMessage"],"d":["Default password for authentication on RabbitMQ.","Default user for authentication on RabbitMQ.","Represents a pool of connections to RabbitMQ.","Names of default queues that should be present on …","Builds an AMQP protocol URI for RabbitMQ. If <code>vhost</code> is an …","Checks whether RabbitMQ can be accessed or not.","Attempts to create a single connection to RabbitMQ. If the …","Creates a connection pool to RabbitMQ. If the <code>vhost</code> is set …","Generate connection URL to a vhost configuration API.","Creates a virtual host on RabbitMQ. Virtual hosts are …","This submodule describes models for messages that can be …","Message for removing all sessions of a given user.","Represents a message for the <code>session_management</code> queue, …","","","","","","","Returns the argument unchanged.","Reconstructs a message from the given JSON string.","Calls <code>U::from(self)</code>.","","Serializes this message to a JSON string.","","","","","The user whose sessions should be removed."],"i":[0,0,0,0,0,0,0,0,0,0,0,6,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,11],"f":[0,0,0,0,[[1,1],2],[1,3],[[1,[4,[1]]],3],[[1,[4,[1]],5],3],[[1,1],2],[[1,1],3],0,0,0,[[]],[[]],[6,6],[[]],[[],[[7,[6]]]],[[6,8],9],[[]],[2,6],[[]],[6,7],[6,2],[[]],[[],7],[[],7],[[],10],0],"p":[[15,"str"],[3,"String"],[8,"Future"],[4,"Option"],[15,"u32"],[4,"SessionMessage"],[4,"Result"],[3,"Formatter"],[6,"Result"],[3,"TypeId"],[13,"Remove"]]},\
"minerva_cache":{"doc":"This is a library for working with anything related to …","t":[0,5,5,17,5,5,5,5],"n":["auth","build_client","build_client_string","EXPIRATION","gen_session_key","get_session","remove_session","save_session"],"q":["minerva_cache","","","minerva_cache::auth","","","",""],"d":["This submodule contains implementations related to saving …","Generates a Redis client, given a server path.","Generates a client connection string, given the server path","Session data expiration time. Counts exactly to 24 hours.","Generates a Redis key for the session to be stored on …","Retrieves session data from Redis, given a tenant and the …","Removes session data from Redis. Will attempt to delete …","Saves session data to Redis, given a tenant, the session …"],"i":[0,0,0,0,0,0,0,0],"f":[0,[1,[[3,[2]]]],[1,4],0,[[1,1],4],[[2,1,1],5],[[2,1,1],5],[[2,1,1,1],3]],"p":[[15,"str"],[3,"Client"],[6,"RedisResult"],[3,"String"],[8,"Future"]]},\
"minerva_data":{"doc":"This is a library for working with anything related to …","t":[0,0,0,0,0,0,0,0,0,0,6,6,5,0,5,5,5,5,3,11,11,11,11,5,12,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,7,5,5,5,0,0,0,0,0,0,0,6,6,5,11,17,11,11,11,11,11,0,11,0,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,14,14,14,14,14,14,14,14,14,2,2,2,2,2,2,2,2,2,2,2,6,6,5,11,17,11,11,11,11,11,0,11,0,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,5,5,5,5,5,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,14,14,14,14,2,2,2,2,2,2,6,6,5,11,17,11,11,11,11,11,0,11,0,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,14,14,14,14,2,2,2,2,2,6,6,5,11,17,11,11,11,11,11,0,11,0,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,5,5,5,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,14,14,2,2,2,2,6,6,5,11,17,11,11,11,11,11,0,11,0,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,14,14,14,14,14,14,2,2,2,2,2,2,2,2,6,6,5,11,17,11,11,11,11,11,0,11,0,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,3,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,14,14,14,14,14,14,2,2,2,2,2,2,2,2,6,6,5,11,17,11,11,11,11,11,0,11,0,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,3,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,14,14,14,14,2,2,2,2,2,2,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,12,12,11,11,12,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,3,4,3,3,13,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,0,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,12,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,0,11,11,11,11,11,3,11,11,11,11,12,12,11,11,11,11,11,5,11,11,12,11,11,11,11,11,11,3,3,3,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,12,5,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11],"n":["db","encryption","file","log","mongo","schema","session","syslog","tenancy","user","DBConnection","DBPool","build_database_string","create","create_database","make_connection_pool","make_single_connection","try_make_single_connection","CreateDatabaseStmt","borrow","borrow_mut","clone","clone_into","create_database","dbname","execute","fmt","from","into","into_request","new","to_owned","try_from","try_into","type_id","vzip","walk_ast","check_hash","generate_hash","slurp","print","SESSION_DURATION","build_client_string","make_client","try_make_client","address","client","product","stock","stock_mov","syslog","user","BoxedQuery","SqlType","_impl_query_id_for_table","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","dsl","fmt","for_update","from","from_clause","into","into_request","into_update_target","join_target","primary_key","star","table","table","to_owned","try_from","try_into","type_id","values","values","vzip","_impl_query_id_for_city","_impl_query_id_for_client_id","_impl_query_id_for_complement","_impl_query_id_for_country","_impl_query_id_for_district","_impl_query_id_for_id","_impl_query_id_for_location","_impl_query_id_for_number","_impl_query_id_for_state","_impl_query_id_for_type_","add","add","add","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","city","client_id","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","complement","country","default","default","default","default","default","default","default","default","default","default","district","div","div","div","execute","execute","execute","execute","execute","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","id","into","into","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","location","mul","mul","mul","number","star","state","sub","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","address","city","client_id","complement","country","district","id","location","number","state","type_","BoxedQuery","SqlType","_impl_query_id_for_table","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","dsl","fmt","for_update","from","from_clause","into","into_request","into_update_target","join_target","primary_key","star","table","table","to_owned","try_from","try_into","type_id","values","values","vzip","_impl_query_id_for_active","_impl_query_id_for_document","_impl_query_id_for_id","_impl_query_id_for_name","_impl_query_id_for_type_","active","add","add","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","div","div","document","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","id","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","mul","mul","name","star","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","active","client","document","id","name","type_","BoxedQuery","SqlType","_impl_query_id_for_table","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","dsl","fmt","for_update","from","from_clause","into","into_request","into_update_target","join_target","primary_key","star","table","table","to_owned","try_from","try_into","type_id","values","values","vzip","_impl_query_id_for_description","_impl_query_id_for_id","_impl_query_id_for_price","_impl_query_id_for_unit","add","add","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","description","div","div","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","id","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","mul","mul","price","star","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unit","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","description","id","price","product","unit","BoxedQuery","SqlType","_impl_query_id_for_table","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","dsl","fmt","for_update","from","from_clause","into","into_request","into_update_target","join_target","primary_key","star","table","table","to_owned","try_from","try_into","type_id","values","values","vzip","_impl_query_id_for_amount","_impl_query_id_for_cost","_impl_query_id_for_product_id","add","add","add","amount","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cost","default","default","default","div","div","div","execute","execute","execute","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","into_request","into_request","into_request","into_request","mul","mul","mul","product_id","star","sub","sub","sub","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","amount","cost","product_id","stock","BoxedQuery","SqlType","_impl_query_id_for_table","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","dsl","fmt","for_update","from","from_clause","into","into_request","into_update_target","join_target","primary_key","star","table","table","to_owned","try_from","try_into","type_id","values","values","vzip","_impl_query_id_for_amount","_impl_query_id_for_cost","_impl_query_id_for_date","_impl_query_id_for_document","_impl_query_id_for_id","_impl_query_id_for_product_id","_impl_query_id_for_shipping_cost","add","add","add","add","add","add","amount","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cost","date","default","default","default","default","default","default","default","div","div","div","div","div","document","execute","execute","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","id","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","mul","mul","mul","mul","mul","product_id","shipping_cost","star","sub","sub","sub","sub","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","amount","cost","date","document","id","product_id","shipping_cost","stock_mov","BoxedQuery","SqlType","_impl_query_id_for_table","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","dsl","fmt","for_update","from","from_clause","into","into_request","into_update_target","join_target","primary_key","star","table","table","to_owned","try_from","try_into","type_id","values","values","vzip","_impl_query_id_for_datetime","_impl_query_id_for_description","_impl_query_id_for_entity","_impl_query_id_for_id","_impl_query_id_for_operation","_impl_query_id_for_requestor","_impl_query_id_for_service","add","add","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","datetime","default","default","default","default","default","default","default","description","div","entity","execute","execute","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","id","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","mul","operation","requestor","service","star","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","datetime","description","entity","id","operation","requestor","service","syslog","BoxedQuery","SqlType","_impl_query_id_for_table","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","dsl","fmt","for_update","from","from_clause","into","into_request","into_update_target","join_target","primary_key","star","table","table","to_owned","try_from","try_into","type_id","values","values","vzip","_impl_query_id_for_email","_impl_query_id_for_id","_impl_query_id_for_login","_impl_query_id_for_name","_impl_query_id_for_pwhash","add","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","div","email","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","id","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","login","mul","name","pwhash","star","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","__static_cond","__static_cond","__static_cond","__static_cond","__static_cond","email","id","login","name","pwhash","user","NewSession","RecvSession","Session","SessionResponse","as_new","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","creation_date","deserialize","deserialize","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","into","into","into","into","into_request","into_request","into_request","into_request","login","login","login","ne","ne","password","password","serialize","serialize","tenant","tenant","tenant","to_owned","to_owned","token","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","Delete","Insert","NewLog","OpType","Op_type","Syslog","Update","_impl_insertable_for_newlog","_impl_queryable_for_syslog","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","build","build_from_row","clone","clone","clone","clone_into","clone_into","clone_into","datetime","datetime","db_enum_impl_OpType","description","description","entity","entity","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from_sql","id","into","into","into","into_request","into_request","into_request","ne","ne","operation","operation","requestor","requestor","serialize","serialize","service","service","to_owned","to_owned","to_owned","to_sql","to_sql","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","values","values","vzip","vzip","vzip","Op_type","borrow","borrow_mut","clone","clone_into","from","into","into_request","pg_impl","to_owned","try_from","try_into","type_id","vzip","Tenant","borrow","borrow_mut","clone","clone_into","connections","database","deserialize","eq","equivalent","fmt","from","get_tenants","into","into_request","name","ne","to_owned","try_from","try_into","type_id","vzip","NewUser","RecvUser","User","_impl_insertable_for_newuser","_impl_queryable_for_user","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","clone","clone_into","default","default","deserialize","deserialize","email","email","email","eq","eq","fmt","fmt","from","from","from","from","from","id","into","into","into","into_request","into_request","into_request","login","login","login","message_to_vec","name","name","name","password","pwhash","pwhash","serialize","serialize","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","values","values","vec_to_message","vzip","vzip","vzip"],"q":["minerva_data","","","","","","","","","","minerva_data::db","","","","","","","","minerva_data::db::create","","","","","","","","","","","","","","","","","","","minerva_data::encryption","","minerva_data::file","minerva_data::log","minerva_data::mongo","","","","minerva_data::schema","","","","","","","minerva_data::schema::address","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","minerva_data::schema::address::columnsminerva_data::schema::address::dsl","","","","","","","","","","","","","","","","","","","","","minerva_data::schema::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","minerva_data::schema::client::columns","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","minerva_data::schema::client::dsl","","","","","","","","","","","minerva_data::schema::product","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","minerva_data::schema::product::columns","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","minerva_data::schema::product::dsl","","","","","","","","","minerva_data::schema::stock","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","minerva_data::schema::stock::columns","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","minerva_data::schema::stock::dsl","","","","","","","minerva_data::schema::stock_mov","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","minerva_data::schema::stock_mov::columns","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","minerva_data::schema::stock_mov::dsl","","","","","","","","","","","","","","","minerva_data::schema::syslog","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","minerva_data::schema::syslog::columns","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","minerva_data::schema::syslog::dsl","","","","","","","","","","","","","","","minerva_data::schema::user","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","minerva_data::schema::user::columns","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","minerva_data::schema::user::dsl","","","","","","","","","","","minerva_data::session","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","minerva_data::syslog","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","minerva_data::syslog::db_enum_impl_OpType","","","","","","","","","","","","","","minerva_data::tenancy","","","","","","","","","","","","","","","","","","","","","","minerva_data::user","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["This module contains functions and structures related to …","This module wraps functions related to password encryption.","This module wraps functions related to file reading.","This module wraps functions related to logging stuff to …","This module contains functions and structures related to …","","This module contains Data Transfer Objects for the user …","This module contains Data Transfer Objects for the <code>syslog</code> …","This module wraps functions and structures for …","This module contains Data Transfer Objects for the <code>user</code> …","Type representing a Diesel connection to a database.","Type representing a Diesel connection pool to a database.","Generates a string to connect to PostgreSQL RDBMS, given a …","","Runs a database creation query, if said database does not …","Creates a connection pool to the PostgreSQL RDBMS, given a …","Creates a single connection to the PostgreSQL RDBMS, and …","Attempts to generate a single connection to the PostgreSQL …","A Diesel statement for creating a database.","","","","","Runs a database creation query, if said database does not …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Creates a new <code>CREATE DATABASE</code> statement. Requires the name …","","","","","","","Check whether a given password matches a given generated …","Generate a hash from a slice. Returns the actual bytes of …","Slurp an entire text file into memory, as a string. If the …","Prints a log line to the screen. Depends on an address of …","Default user session duration for the <code>session</code> collection, …","Generates a string to connect to MongoDB, given a server …","Creates a client connection to the MongoDB service, and …","Attempts to generate a single client for the MongoDB …","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","Re-exports all of the columns of this table, as well as the","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","Re-exports all of the columns of this table, as well as the","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","Re-exports all of the columns of this table, as well as the","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","Re-exports all of the columns of this table, as well as the","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","Re-exports all of the columns of this table, as well as the","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","Re-exports all of the columns of this table, as well as the","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","Re-exports all of the columns of this table, as well as the","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","DTO representing the data for a new session, to be …","DTO representing the data for a new session, to be …","DTO representing the data for a user session.","DTO representing the data returned from the login route on …","Converts this DTO to another DTO that can be used by the …","","","","","","","","","","","","","Creation date of the session, used for checks related to …","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","User logged in.","User attempting to log in.","User attempting to log in.","","","Plain text password of the user attempting to log in.","Plain text password of the user attempting to log in.","","","Tenant of this session.","Tenant of the required session.","Tenant where the token is valid.","","","Access token for the user.","","","","","","","","","","","","","","","","","Operation for removing entities.","Operation for inserting new entities.","DTO for adding a new entry on the <code>syslog</code> table.","Enumeration for the type of operation registered on <code>syslog</code>.","","DTO representing a single entry on the <code>syslog</code> table.","Operation for updating entities.","","","","","","","","","","","","","","","","","","","","","","","","Date and time of the performed operation.","Date and time of the operation being performed.","","Optional description of the performed operation.","Optional description of the operation being performed.","Name of the entity that was manipulated, usually the same …","Name of the entity being manipulated, usually the same as …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","ID of the entry on the table.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Operation performed.","Operation being performed.","Username of whom requested the operation.","Username of whom is requesting the operation.","","","Name of the service that performed the operation.","Name of the service performing the operation.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","Tenant data for a single entry of a table in the TOML file.","","","","","Max number of connections on a connection pool, whenever …","Actual tenant name and database name on any database …","","","","","Returns the argument unchanged.","Get a list of tenant configuration from a given …","Calls <code>U::from(self)</code>.","","Human-readable tenant name, mostly for aesthetic reasons.","","","","","","","DTO representing a new entry on the <code>user</code> table.","DTO representing user data received through a REST request.","DTO representing a single entry on the <code>user</code> table.","","","","","","","","","","","","","","","","Optional e-mail of the user for this entry.","Optional e-mail of the user being emplaced. Shouldn’t …","Optional e-mail of the user being created. Shouldn’t …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","ID of the entry on the table.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Username of the user for this entry.","Username of the user being emplaced.","Username of the user being created.","Converts a <code>UserList</code> message into a <code>Vec</code> of <code>User</code> DTOs so …","Full name of the user for this entry.","Full name of the user being emplaced.","Full name of the user being created.","Password of the user being emplaced. If updating a user, …","Hash of the password of the user for this entry.","Hash of the password of the user being created.","","","","","","","","","","","","","","","Converts a <code>Vec</code> of <code>User</code> DTOs to a <code>UserList</code> so that it can be","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,0,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,0,22,22,22,22,22,0,22,0,22,22,22,22,22,22,22,22,22,22,0,22,22,22,22,22,22,22,22,0,0,0,0,0,0,0,0,0,0,26,27,28,25,26,27,28,29,30,31,32,33,34,35,25,26,27,28,29,30,31,32,33,34,35,0,0,25,26,27,28,29,30,31,32,33,34,35,25,26,27,28,29,30,31,32,33,34,35,0,0,26,27,28,29,30,31,32,33,34,35,0,26,27,28,26,27,28,29,30,31,32,33,34,35,25,26,27,28,29,30,31,32,33,34,35,25,26,27,28,29,30,31,32,33,34,35,0,25,26,27,28,29,30,31,32,33,34,35,25,26,27,28,29,30,31,32,33,34,35,0,26,27,28,0,0,0,26,27,28,25,26,27,28,29,30,31,32,33,34,35,25,26,27,28,29,30,31,32,33,34,35,25,26,27,28,29,30,31,32,33,34,35,0,25,26,27,28,29,30,31,32,33,34,35,25,26,27,28,29,30,31,32,33,34,35,25,26,27,28,29,30,31,32,33,34,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,0,36,36,36,36,36,0,36,0,36,36,36,36,36,36,36,36,36,36,0,36,36,36,36,36,36,36,36,0,0,0,0,0,0,38,39,37,38,39,40,41,42,37,38,39,40,41,42,37,38,39,40,41,42,37,38,39,40,41,42,38,39,40,41,42,38,39,0,38,39,40,41,42,37,38,39,40,41,42,37,38,39,40,41,42,0,37,38,39,40,41,42,37,38,39,40,41,42,38,39,0,0,38,39,37,38,39,40,41,42,37,38,39,40,41,42,37,38,39,40,41,42,0,37,38,39,40,41,42,37,38,39,40,41,42,37,38,39,40,41,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,0,43,43,43,43,43,0,43,0,43,43,43,43,43,43,43,43,43,43,0,43,43,43,43,43,43,43,43,0,0,0,0,45,46,44,45,47,48,46,44,45,47,48,46,44,45,47,48,46,44,45,47,48,46,45,47,48,46,0,45,46,45,47,48,46,44,45,47,48,46,44,45,47,48,46,0,44,45,47,48,46,44,45,47,48,46,45,46,0,0,45,46,44,45,47,48,46,44,45,47,48,46,44,45,47,48,46,44,45,47,48,46,0,44,45,47,48,46,44,45,47,48,46,0,0,0,0,0,0,0,0,0,0,0,0,49,0,49,49,49,49,49,0,49,0,49,49,49,49,49,49,49,49,49,49,0,49,49,49,49,49,49,49,49,0,0,0,51,52,53,0,50,51,52,53,50,51,52,53,50,51,52,53,50,51,52,53,0,51,52,53,51,52,53,51,52,53,50,51,52,53,50,51,52,53,50,51,52,53,50,51,52,53,51,52,53,0,0,51,52,53,50,51,52,53,50,51,52,53,50,51,52,53,50,51,52,53,50,51,52,53,50,51,52,53,0,0,0,0,0,0,0,0,0,0,54,0,54,54,54,54,54,0,54,0,54,54,54,54,54,54,54,54,54,54,0,54,54,54,54,54,54,54,54,0,0,0,0,0,0,0,56,57,58,59,60,61,0,55,56,57,62,58,59,60,61,55,56,57,62,58,59,60,61,55,56,57,62,58,59,60,61,55,56,57,62,58,59,60,61,0,0,56,57,62,58,59,60,61,56,57,58,59,60,0,56,57,62,58,59,60,61,55,56,57,62,58,59,60,61,55,56,57,62,58,59,60,61,0,55,56,57,62,58,59,60,61,55,56,57,62,58,59,60,61,56,57,58,59,60,0,0,0,56,57,58,59,60,61,55,56,57,62,58,59,60,61,55,56,57,62,58,59,60,61,55,56,57,62,58,59,60,61,55,56,57,62,58,59,60,61,55,56,57,62,58,59,60,61,55,56,57,62,58,59,60,61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,63,0,63,63,63,63,63,0,63,0,63,63,63,63,63,63,63,63,63,63,0,63,63,63,63,63,63,63,63,0,0,0,0,0,0,0,65,66,64,65,67,68,69,70,66,71,64,65,67,68,69,70,66,71,64,65,67,68,69,70,66,71,64,65,67,68,69,70,66,71,0,65,67,68,69,70,66,71,0,65,0,65,67,68,69,70,66,71,64,65,67,68,69,70,66,71,64,65,67,68,69,70,66,71,0,64,65,67,68,69,70,66,71,64,65,67,68,69,70,66,71,65,0,0,0,0,65,66,64,65,67,68,69,70,66,71,64,65,67,68,69,70,66,71,64,65,67,68,69,70,66,71,64,65,67,68,69,70,66,71,64,65,67,68,69,70,66,71,64,65,67,68,69,70,66,71,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,0,72,72,72,72,72,0,72,0,72,72,72,72,72,72,72,72,72,72,0,72,72,72,72,72,72,72,72,0,0,0,0,0,74,73,74,75,76,77,78,73,74,75,76,77,78,73,74,75,76,77,78,73,74,75,76,77,78,74,75,76,77,78,74,0,74,75,76,77,78,73,74,75,76,77,78,73,74,75,76,77,78,0,73,74,75,76,77,78,73,74,75,76,77,78,0,74,0,0,0,74,73,74,75,76,77,78,73,74,75,76,77,78,73,74,75,76,77,78,73,74,75,76,77,78,73,74,75,76,77,78,73,74,75,76,77,78,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,79,81,80,79,82,81,80,79,82,81,80,81,80,81,81,80,79,82,81,80,81,80,81,80,79,82,81,81,81,81,80,80,79,82,81,80,79,82,81,80,79,82,81,80,79,81,80,80,79,81,82,81,80,82,81,80,82,81,80,79,82,81,80,79,82,81,80,79,82,81,80,79,82,85,85,0,0,0,0,85,0,0,85,85,85,85,85,85,85,86,88,85,86,88,85,86,85,85,86,88,85,86,88,86,88,0,86,88,86,88,85,86,88,85,86,88,85,86,88,85,86,88,85,86,85,86,88,85,86,88,86,88,86,88,86,88,85,86,86,88,85,86,88,85,85,85,86,88,85,86,88,85,86,88,88,88,85,86,88,0,92,92,92,92,92,92,92,0,92,92,92,92,92,0,93,93,93,93,93,93,93,93,93,93,93,0,93,93,93,93,93,93,93,93,93,0,0,0,0,0,94,95,96,94,95,96,94,94,94,95,96,94,95,94,95,96,94,96,94,96,94,94,95,96,96,94,94,95,96,94,95,96,94,95,96,0,94,95,96,95,94,96,94,95,94,94,95,96,94,95,96,94,95,96,96,96,0,94,95,96],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[[1,1],2],0,[[1,1],[[3,[2]]]],[[1,1,4],5],[[1,1],6],[[1,1],[[3,[6,7]]]],0,[[]],[[]],[8,8],[[]],[[1,1],[[3,[2]]]],0,[[],[[3,[9,10]]]],[[8,11],12],[[]],[[]],[[],13],[1,8],[[]],[[],3],[[],3],[[],14],[[]],[[8,[16,[15]]],17],[[1,1],18],[1,[[20,[19]]]],[1,2],[[21,2,2,1]],0,[1,2],[1,5],[1,5],0,0,0,0,0,0,0,0,0,[[]],[[]],0,[22],[[]],[[]],[22,22],[[]],0,[22],0,[[22,11],12],[[]],[[]],[22],[[]],[[],13],[22,23],[24],[22],[22,25],0,[[]],[[]],[[],3],[[],3],[[],14],[22],[22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26],[27],[28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[25,25],[26,26],[27,27],[28,28],[29,29],[30,30],[31,31],[32,32],[33,33],[34,34],[35,35],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],26],[[],27],[[],28],[[],29],[[],30],[[],31],[[],32],[[],33],[[],34],[[],35],0,[26],[27],[28],[[],[[3,[9,10]]]],[[],[[3,[9,10]]]],[[],[[3,[9,10]]]],[[],[[3,[9,10]]]],[[],[[3,[9,10]]]],[[],[[3,[9,10]]]],[[],[[3,[9,10]]]],[[],[[3,[9,10]]]],[[],[[3,[9,10]]]],[[],[[3,[9,10]]]],[[25,11],12],[[26,11],12],[[27,11],12],[[28,11],12],[[29,11],12],[[30,11],12],[[31,11],12],[[32,11],12],[[33,11],12],[[34,11],12],[[35,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],0,[26],[27],[28],0,0,0,[26],[27],[28],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[25,[16,[15]]],17],[[26,16],17],[[27,16],17],[[28,16],17],[[29,16],17],[[30,16],17],[[31,16],17],[[32,16],17],[[33,16],17],[[34,16],17],[[35,16],17],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,[36],[[]],[[]],[36,36],[[]],0,[36],0,[[36,11],12],[[]],[[]],[36],[[]],[[],13],[36,23],[24],[36],[36,37],0,[[]],[[]],[[],3],[[],3],[[],14],[36],[36],[[]],[[]],[[]],[[]],[[]],[[]],0,[38],[39],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[37,37],[38,38],[39,39],[40,40],[41,41],[42,42],[[]],[[]],[[]],[[]],[[]],[[]],[[],38],[[],39],[[],40],[[],41],[[],42],[38],[39],0,[[],[[3,[9,10]]]],[[],[[3,[9,10]]]],[[],[[3,[9,10]]]],[[],[[3,[9,10]]]],[[],[[3,[9,10]]]],[[37,11],12],[[38,11],12],[[39,11],12],[[40,11],12],[[41,11],12],[[42,11],12],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[38],[39],0,0,[38],[39],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],0,[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[37,[16,[15]]],17],[[38,16],17],[[39,16],17],[[40,16],17],[[41,16],17],[[42,16],17],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,[43],[[]],[[]],[43,43],[[]],0,[43],0,[[43,11],12],[[]],[[]],[43],[[]],[[],13],[43,23],[24],[43],[43,44],0,[[]],[[]],[[],3],[[],3],[[],14],[43],[43],[[]],[[]],[[]],[[]],[[]],[45],[46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[44,44],[45,45],[47,47],[48,48],[46,46],[[]],[[]],[[]],[[]],[[]],[[],45],[[],47],[[],48],[[],46],0,[45],[46],[[],[[3,[9,10]]]],[[],[[3,[9,10]]]],[[],[[3,[9,10]]]],[[],[[3,[9,10]]]],[[44,11],12],[[45,11],12],[[47,11],12],[[48,11],12],[[46,11],12],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[45],[46],0,0,[45],[46],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],14],[[],14],[[],14],[[],14],[[],14],0,[[]],[[]],[[]],[[]],[[]],[[44,[16,[15]]],17],[[45,16],17],[[47,16],17],[[48,16],17],[[46,16],17],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,[49],[[]],[[]],[49,49],[[]],0,[49],0,[[49,11],12],[[]],[[]],[49],[[]],[[],13],[49,23],[24],[49],[49,50],0,[[]],[[]],[[],3],[[],3],[[],14],[49],[49],[[]],[[]],[[]],[[]],[51],[52],[53],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[50,50],[51,51],[52,52],[53,53],[[]],[[]],[[]],[[]],0,[[],51],[[],52],[[],53],[51],[52],[53],[[],[[3,[9,10]]]],[[],[[3,[9,10]]]],[[],[[3,[9,10]]]],[[50,11],12],[[51,11],12],[[52,11],12],[[53,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[51],[52],[53],0,0,[51],[52],[53],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[50,[16,[15]]],17],[[51,16],17],[[52,16],17],[[53,16],17],0,0,0,0,0,0,0,0,0,[[]],[[]],0,[54],[[]],[[]],[54,54],[[]],0,[54],0,[[54,11],12],[[]],[[]],[54],[[]],[[],13],[54,23],[24],[54],[54,55],0,[[]],[[]],[[],3],[[],3],[[],14],[54],[54],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[56],[57],[58],[59],[60],[61],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[55,55],[56,56],[57,57],[62,62],[58,58],[59,59],[60,60],[61,61],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],56],[[],57],[[],62],[[],58],[[],59],[[],60],[[],61],[56],[57],[58],[59],[60],0,[[],[[3,[9,10]]]],[[],[[3,[9,10]]]],[[],[[3,[9,10]]]],[[],[[3,[9,10]]]],[[],[[3,[9,10]]]],[[],[[3,[9,10]]]],[[],[[3,[9,10]]]],[[55,11],12],[[56,11],12],[[57,11],12],[[62,11],12],[[58,11],12],[[59,11],12],[[60,11],12],[[61,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[56],[57],[58],[59],[60],0,0,0,[56],[57],[58],[59],[60],[61],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[55,[16,[15]]],17],[[56,16],17],[[57,16],17],[[62,16],17],[[58,16],17],[[59,16],17],[[60,16],17],[[61,16],17],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,[63],[[]],[[]],[63,63],[[]],0,[63],0,[[63,11],12],[[]],[[]],[63],[[]],[[],13],[63,23],[24],[63],[63,64],0,[[]],[[]],[[],3],[[],3],[[],14],[63],[63],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[65],[66],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[64,64],[65,65],[67,67],[68,68],[69,69],[70,70],[66,66],[71,71],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],65],[[],67],[[],68],[[],69],[[],70],[[],66],[[],71],0,[65],0,[[],[[3,[9,10]]]],[[],[[3,[9,10]]]],[[],[[3,[9,10]]]],[[],[[3,[9,10]]]],[[],[[3,[9,10]]]],[[],[[3,[9,10]]]],[[],[[3,[9,10]]]],[[64,11],12],[[65,11],12],[[67,11],12],[[68,11],12],[[69,11],12],[[70,11],12],[[66,11],12],[[71,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[65],0,0,0,0,[65],[66],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[64,[16,[15]]],17],[[65,16],17],[[67,16],17],[[68,16],17],[[69,16],17],[[70,16],17],[[66,16],17],[[71,16],17],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,[72],[[]],[[]],[72,72],[[]],0,[72],0,[[72,11],12],[[]],[[]],[72],[[]],[[],13],[72,23],[24],[72],[72,73],0,[[]],[[]],[[],3],[[],3],[[],14],[72],[72],[[]],[[]],[[]],[[]],[[]],[[]],[74],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[73,73],[74,74],[75,75],[76,76],[77,77],[78,78],[[]],[[]],[[]],[[]],[[]],[[]],[[],74],[[],75],[[],76],[[],77],[[],78],[74],0,[[],[[3,[9,10]]]],[[],[[3,[9,10]]]],[[],[[3,[9,10]]]],[[],[[3,[9,10]]]],[[],[[3,[9,10]]]],[[73,11],12],[[74,11],12],[[75,11],12],[[76,11],12],[[77,11],12],[[78,11],12],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],0,[74],0,0,0,[74],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],[[]],[[73,[16,[15]]],17],[[74,16],17],[[75,16],17],[[76,16],17],[[77,16],17],[[78,16],17],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[79,1],80],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[81,81],[80,80],[[]],[[]],0,[[],[[3,[81]]]],[[],[[3,[80]]]],[[],[[3,[79]]]],[[],[[3,[82]]]],[[81,81],18],[[80,80],18],[[],18],[[],18],[[81,11],12],[[80,11],12],[[79,11],12],[[82,11],12],[[]],[83,81],[84,81],[80,81],[84,80],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],0,0,0,[[81,81],18],[[80,80],18],0,0,[81,3],[82,3],0,0,0,[[]],[[]],0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[85],[85],[85],[85],[85],[85],[[]],[[]],[[]],[[]],[[]],[[]],[[],85],[[],86],[[],[[87,[85]]]],[85,85],[86,86],[88,88],[[]],[[]],[[]],0,0,0,0,0,0,0,[[85,85],18],[[86,86],18],[[88,88],18],[[],18],[[],18],[[],18],[[85,11],12],[[86,11],12],[[88,11],12],[[]],[[]],[[]],[89,[[87,[85]]]],0,[[]],[[]],[[]],[[],13],[[],13],[[],13],[[86,86],18],[[88,88],18],0,0,0,0,[85,3],[86,3],0,0,[[]],[[]],[[]],[[85,90],91],[[85,90],91],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],14],[[],14],[[],14],[88],[88],[[]],[[]],[[]],0,[[]],[[]],[92,92],[[]],[[]],[[]],[[],13],0,[[]],[[],3],[[],3],[[],14],[[]],0,[[]],[[]],[93,93],[[]],0,0,[[],[[3,[93]]]],[[93,93],18],[[],18],[[93,11],12],[[]],[1,[[20,[93]]]],[[]],[[],13],0,[[93,93],18],[[]],[[],3],[[],3],[[],14],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],94],[94,94],[[]],[[],95],[[],96],[[],[[3,[94]]]],[[],[[3,[95]]]],0,0,0,[[94,94],18],[[96,96],18],[[94,11],12],[[96,11],12],[97,94],[[]],[[]],[97,96],[[]],0,[[]],[[]],[[]],[[],13],[[],13],[[],13],0,0,0,[98,[[20,[94]]]],0,0,0,0,0,0,[94,3],[95,3],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],14],[[],14],[[],14],[96],[96],[[[20,[94]]],98],[[]],[[]],[[]]],"p":[[15,"str"],[3,"String"],[4,"Result"],[15,"u32"],[8,"Future"],[3,"PgConnection"],[4,"ConnectionError"],[3,"CreateDatabaseStmt"],[15,"usize"],[4,"Error"],[3,"Formatter"],[6,"Result"],[3,"Request"],[3,"TypeId"],[8,"Backend"],[3,"AstPass"],[6,"QueryResult"],[15,"bool"],[15,"u8"],[3,"Vec"],[4,"SocketAddr"],[3,"table"],[3,"UpdateTarget"],[3,"OnClauseWrapper"],[3,"star"],[3,"id"],[3,"client_id"],[3,"type_"],[3,"location"],[3,"number"],[3,"complement"],[3,"district"],[3,"state"],[3,"city"],[3,"country"],[3,"table"],[3,"star"],[3,"id"],[3,"type_"],[3,"name"],[3,"document"],[3,"active"],[3,"table"],[3,"star"],[3,"id"],[3,"price"],[3,"description"],[3,"unit"],[3,"table"],[3,"star"],[3,"product_id"],[3,"amount"],[3,"cost"],[3,"table"],[3,"star"],[3,"id"],[3,"product_id"],[3,"amount"],[3,"cost"],[3,"shipping_cost"],[3,"date"],[3,"document"],[3,"table"],[3,"star"],[3,"id"],[3,"datetime"],[3,"service"],[3,"requestor"],[3,"entity"],[3,"operation"],[3,"description"],[3,"table"],[3,"star"],[3,"id"],[3,"login"],[3,"name"],[3,"email"],[3,"pwhash"],[3,"RecvSession"],[3,"NewSession"],[3,"Session"],[3,"SessionResponse"],[3,"SessionData"],[3,"SessionCreationData"],[4,"OpType"],[3,"Syslog"],[6,"Result"],[3,"NewLog"],[4,"Option"],[3,"Output"],[6,"Result"],[3,"Op_type"],[3,"Tenant"],[3,"User"],[3,"RecvUser"],[3,"NewUser"],[3,"User"],[3,"UserList"]]},\
"minerva_dispatch":{"doc":"Minerva System: DISPATCH Service","t":[0,0,5,17,5,0,5,5,13,3,13,3,13,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12],"n":["controller","error","main","QUEUE_PROCESSING_WAIT_SECS","queue_consume","session_management","dispatch","remove_user_sessions","Ack","AckSnafu","Connection","ConnectionSnafu","Delivery","DeliverySnafu","DispatchError","as_error_source","backtrace","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","build","cause","clone","clone","clone","clone_into","clone_into","clone_into","consumer_name","consumer_name","consumer_name","description","fail","fail","fail","fmt","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","into_error","into_error","into_error","into_request","into_request","into_request","into_request","service_name","source","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","consumer_name","consumer_name","consumer_name","service_name"],"q":["minerva_dispatch","","","minerva_dispatch::controller","","","minerva_dispatch::controller::session_management","","minerva_dispatch::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","minerva_dispatch::error::DispatchError","","",""],"d":["","This module describes errors that could arise in this …","Entry point for this module.","Number of seconds to wait for each task to reprocess","Primary entry point for the consuming of messages from the …","This controller contains routines related to dispatching …","Dispatches a user session message.","Dispatches requests to SESSION so that all sessions for a …","Describes an error while trying to send back and …","SNAFU context selector for the <code>DispatchError::Ack</code> variant","Describes a connection error while attempting to connect …","SNAFU context selector for the <code>DispatchError::Connection</code> …","Describes an error while receiving a message from the …","SNAFU context selector for the <code>DispatchError::Delivery</code> …","Describes an error pertaining a message dispatch. These …","","","","","","","","","","","Consume the selector and return the associated error","Consume the selector and return the associated error","Consume the selector and return the associated error","","","","","","","","","","","","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","Consume the selector and return a <code>Result</code> with the …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,12,0,12,0,12,0,0,12,12,12,15,16,17,12,15,16,17,15,16,17,12,15,16,17,15,16,17,15,16,17,12,15,16,17,12,12,15,16,17,12,15,16,17,12,15,16,17,15,16,17,12,15,16,17,15,12,15,16,17,12,12,15,16,17,12,15,16,17,12,15,16,17,12,15,16,17,24,25,26,24],"f":[0,0,[[],[[3,[[2,[1]]]]]],0,[[4,5,6,7,8],9],0,[[10,10,7],9],[[10,11,10,10],9],0,0,0,0,0,0,0,[[],1],[12,[[14,[13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[15,12],[16,12],[17,12],[12,[[14,[1]]]],[[[15,[18,18]]],[[15,[18,18]]]],[[[16,[18]]],[[16,[18]]]],[[[17,[18]]],[[17,[18]]]],[[]],[[]],[[]],0,0,0,[12,10],[15,[[3,[12]]]],[16,[[3,[12]]]],[17,[[3,[12]]]],[[12,19],20],[[12,19],20],[[[15,[21,21]],19],20],[[[16,[21]],19],20],[[[17,[21]],19],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[15,12],[16,12],[17,12],[[],22],[[],22],[[],22],[[],22],0,[12,[[14,[1]]]],[[]],[[]],[[]],[[],4],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],23],[[],23],[[],23],[[],23],[[]],[[]],[[]],[[]],0,0,0,0],"p":[[8,"Error"],[3,"Box"],[4,"Result"],[3,"String"],[6,"LapinPool"],[6,"DBPool"],[3,"Client"],[3,"Client"],[8,"Future"],[15,"str"],[3,"Database"],[4,"DispatchError"],[3,"Backtrace"],[4,"Option"],[3,"ConnectionSnafu"],[3,"DeliverySnafu"],[3,"AckSnafu"],[8,"Clone"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[3,"Request"],[3,"TypeId"],[13,"Connection"],[13,"Delivery"],[13,"Ack"]]},\
"minerva_product":{"doc":"Minerva System: PRODUCT Service","t":[5,0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["main","service","ProductsService","borrow","borrow_mut","clone","clone_into","default","delete","from","index","into","into_request","show","store","to_owned","try_from","try_into","type_id","update","vzip"],"q":["minerva_product","","minerva_product::service","","","","","","","","","","","","","","","","","",""],"d":["Entry point for this service.","This module encloses the implementation of the PRODUCTS …","Represents the PRODUCTS service that will be attached to …","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[0,0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4],"f":[[[],[[3,[[2,[1]]]]]],0,0,[[]],[[]],[4,4],[[]],[[],4],[[4,[6,[5]]],[[8,[[2,[7]]]]]],[[]],[[4,[6,[9]]],[[8,[[2,[7]]]]]],[[]],[[],6],[[4,[6,[5]]],[[8,[[2,[7]]]]]],[[4,[6,[10]]],[[8,[[2,[7]]]]]],[[]],[[],3],[[],3],[[],11],[[4,[6,[10]]],[[8,[[2,[7]]]]]],[[]]],"p":[[8,"Error"],[3,"Box"],[4,"Result"],[3,"ProductsService"],[3,"EntityIndex"],[3,"Request"],[8,"Future"],[3,"Pin"],[3,"PageIndex"],[3,"Product"],[3,"TypeId"]]},\
"minerva_report":{"doc":"Minerva System: REPORT Service","t":[5],"n":["main"],"q":["minerva_report"],"d":[""],"i":[0],"f":[[[],[[3,[[2,[1]]]]]]],"p":[[8,"Error"],[3,"Box"],[4,"Result"]]},\
"minerva_rest":{"doc":"Minerva System: REST Service","t":[0,0,5,5,0,0,0,0,0,5,5,5,5,3,5,11,11,5,5,11,5,5,11,11,11,11,5,11,5,12,11,11,11,5,5,11,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,5,5,5,5,5,5,5,0,13,13,13,13,4,3,11,11,11,11,11,11,11,11,11,11,11,5,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,5],"n":["controller","fairings","launch","main","utils","auth","handlers","response","user","get_endpoint","login","logout","routes","DefaultError","bad_request","borrow","borrow_mut","catchers","default_catcher","from","gen_message","internal","into","into_collection","into_request","mapped","not_found","respond_to","service_unavailable","status","try_from","try_into","type_id","unauthorized","unprocessable_entity","vzip","BadRequest","ClientClosedRequest","Conflict","InternalServerError","NetworkAuthenticationRequired","NoResponse","NotFound","NotImplemented","NotModified","Ok","PreconditionFailed","RequestTimeout","Response","ServiceUnavailable","Unauthorized","UnprocessableEntity","borrow","borrow_mut","clone","clone_into","convert","fmt","from","generate_error","into","into_collection","into_request","mapped","respond","respond_empty","respond_to","to_owned","try_from","try_into","type_id","vzip","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","delete","get_endpoint","index","routes","show","store","update","auth","ExpiredAuth","MissingAuth","MissingTenant","ServiceUnreachable","SessionError","SessionInfo","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","fmt","from","from","from","from_request","get_bearer_token","info","into","into","into_collection","into_collection","into_request","into_request","mapped","mapped","to_owned","token","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","get_ip"],"q":["minerva_rest","","","","","minerva_rest::controller","","","","minerva_rest::controller::auth","","","","minerva_rest::controller::handlers","","","","","","","","","","","","","","","","","","","","","","","minerva_rest::controller::response","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","minerva_rest::controller::response::Response","","","","","","","","","","","","","","","minerva_rest::controller::user","","","","","","","minerva_rest::fairings","minerva_rest::fairings::auth","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","minerva_rest::utils"],"d":["This module is responsible for encapsulating the …","This module contains all implementations of fairings.","Entry point for this service. Creates the service and …","","This module contains utilitary functions and structures …","This submodule describes routes for authentication and …","This submodule contains default status code catchers for …","This submodule contains structures and helper functions …","This submodule describes routes for managing the data for …","Retrieves the endpoint for the gRPC session service. …","Route for user login.","Route for user logoff.","Returns the list of routes for this module.","Default error structure implementing a Rocket responder …","Error catcher for 400 - Bad Request.","","","Exports an array of catcher functions to be used when …","Default error catcher for any kind of error that was not …","Returns the argument unchanged.","Generates a simple JSON string from a given message.","Error catcher for 500 - Internal Server Error.","Calls <code>U::from(self)</code>.","","","","Error catcher for 404 - Not Found.","","Error catcher for 503 - Service Unavailable. Returned …","Status code for the error.","","","","Error catcher for 401 - Unauthorized. Returned on problems …","Error catcher for 412 - Unprocessable Entity. Returned …","","400 Bad Request","499 Client Closed Request","409 Conflict","500 Internal Server Error","511 Network Authentication Required","444 No Response","404 Not Found","501 Not Implemented","304 Not Modified","200 OK","412 Precondition Failed","408 Request Timeout","Enumeration containing many kinds of responses to a REST …","503 Service Unavailable","401 Unauthorized","422 Unprocessable Entity","","","","","Actual internal conversion function for generating an …","","Returns the argument unchanged.","Generates a <code>Response</code> from a gRPC response, assuming that …","Calls <code>U::from(self)</code>.","","","","Generates a <code>Response</code> from a gRPC response. This assumes …","Generates a <code>Response</code> from a gRPC response, whenever the …","","","","","","","","","","","","","","","","","","","","","","Route for removing a user altogether.","Retrieves the endpoint for the gRPC users service. …","Route for listing all users.","Returns the list of routes for this module.","Route for fetching data of a single user.","Route for creating a new user.","Route for updating data for a user.","This submodule contains the implementation of an …","The authentication data has expired.","There is no authentication data for that user’s session.","The cookies did not contain information on the tenant.","The required microservice could not be reached.","Describes kinds of errors when attempting to retrieve a …","Struct for session information that can be retrieved for …","","","","","","","","Generates a new session info from a <code>SessionData</code> gRPC …","Returns the argument unchanged.","Returns the argument unchanged.","","Extracts bearer token from authorization header, if any.","Session info for the authenticated user.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Session token for the authenticated user.","","","","","","","","","Returns the IP address and port of this application, which …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,15,0,0,15,0,0,15,15,15,15,0,15,0,15,15,15,15,0,0,15,13,13,13,13,13,13,13,13,13,13,13,13,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,0,0,0,0,0,0,0,0,31,31,31,31,0,0,8,31,8,31,31,31,31,8,8,31,8,0,8,8,31,8,31,8,31,8,31,31,8,8,31,8,31,8,31,8,31,0],"f":[0,0,[[],[[2,[1]]]],[[]],0,0,0,0,0,[[],3],[[4,[6,[5]]],7],[8,7],[[],[[10,[9]]]],0,[[11,12],13],[[]],[[]],[[],[[10,[14]]]],[[11,12],15],[[]],[4,3],[[11,12],13],[[]],[[],16],[[],17],[[],16],[[11,12],13],[[15,12],18],[[11,12],13],0,[[],19],[[],19],[[],20],[[11,12],13],[[11,12],13],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[13,13],[[]],[21,13],[[13,22],23],[[]],[[[19,[24,21]]],13],[[]],[[],16],[[],17],[[],16],[[[19,[25,21]]],13],[[[19,[26,21]]],13],[[13,12],18],[[]],[[],19],[[],19],[[],20],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[8,27],7],[[],3],[[8,[29,[28]]],7],[[],[[10,[9]]]],[[8,27],7],[[8,[6,[30]]],7],[[8,27,[6,[30]]],7],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[31,31],[[]],[[31,22],23],[[32,3],8],[[]],[[]],[12,[[34,[[33,[7]]]]]],[4,[[29,[3]]]],0,[[]],[[]],[[],16],[[],16],[[],17],[[],17],[[],16],[[],16],[[]],0,[[],19],[[],19],[[],19],[[],19],[[],20],[[],20],[[]],[[]],[[],35]],"p":[[4,"Build"],[3,"Rocket"],[3,"String"],[15,"str"],[3,"RecvSession"],[3,"Json"],[8,"Future"],[3,"SessionInfo"],[3,"Route"],[3,"Vec"],[3,"Status"],[3,"Request"],[4,"Response"],[3,"Catcher"],[3,"DefaultError"],[3,"SmallVec"],[3,"Request"],[6,"Result"],[4,"Result"],[3,"TypeId"],[3,"Status"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[8,"Serialize"],[3,"Response"],[15,"i32"],[15,"i64"],[4,"Option"],[3,"RecvUser"],[4,"SessionError"],[3,"SessionData"],[3,"Box"],[3,"Pin"],[4,"SocketAddr"],[13,"Ok"],[13,"NotModified"],[13,"BadRequest"],[13,"Unauthorized"],[13,"NotFound"],[13,"RequestTimeout"],[13,"Conflict"],[13,"PreconditionFailed"],[13,"UnprocessableEntity"],[13,"NoResponse"],[13,"ClientClosedRequest"],[13,"InternalServerError"],[13,"NotImplemented"],[13,"ServiceUnavailable"],[13,"NetworkAuthenticationRequired"]]},\
"minerva_rpc":{"doc":"This is a library for working with anything related to …","t":[5,0,0,0,0,0,3,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,3,11,11,11,11,5,11,11,11,5,12,12,11,11,11,11,6,5,0,0,3,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,8,3,3,11,12,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,10,12,11,11,11,11,11,11,11,11,12,10,10,11,11,11,11,11,11,11,11,10,11,11,11,6,5,0,0,3,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,8,3,3,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,11,11,11,11,11,11,11,10,10,11,12,11,11,11,11,11,11,11,11,11,11,11,6,5,0,0,3,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,8,3,3,11,12,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,10,12,11,11,11,11,11,11,11,11,12,10,10,11,11,11,11,11,11,11,11,10,11,11,11],"n":["get_address","messages","metadata","products","session","user","EntityIndex","PageIndex","Product","ProductList","SessionCreationData","SessionData","SessionToken","User","UserList","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","creation_date","default","default","default","default","default","default","default","default","default","description","email","email","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","id","id","id","id","index","index","index","into","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","login","login","login","name","ne","ne","ne","ne","ne","ne","ne","ne","ne","password","password","password","price","products","tenant","tenant","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","token","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unit","users","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ClientInterceptor","borrow","borrow_mut","call","from","get_value","into","into_request","new","push_metadata","requestor","tenant","try_from","try_into","type_id","vzip","ProductsInterceptedClient","make_client","products_client","products_server","ProductsClient","accept_compressed","borrow","borrow_mut","clone","clone_into","connect","delete","fmt","from","index","inner","into","into_request","new","send_compressed","show","store","to_owned","try_from","try_into","type_id","update","vzip","with_interceptor","with_origin","0","Products","ProductsServer","_Inner","accept_compressed","accept_compression_encodings","borrow","borrow","borrow_mut","borrow_mut","call","call","clone","clone","clone_into","clone_into","delete","fmt","fmt","from","from","from_arc","index","inner","into","into","into_request","into_request","new","poll_ready","poll_ready","send_compressed","send_compression_encodings","show","store","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update","vzip","vzip","with_interceptor","SessionInterceptedClient","make_client","session_client","session_server","SessionClient","accept_compressed","borrow","borrow_mut","clone","clone_into","connect","fmt","from","generate","inner","into","into_request","new","remove","retrieve","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","0","Session","SessionServer","_Inner","accept_compressed","accept_compression_encodings","borrow","borrow","borrow_mut","borrow_mut","call","call","clone","clone","clone_into","clone_into","fmt","fmt","from","from","from_arc","generate","inner","into","into","into_request","into_request","new","poll_ready","poll_ready","remove","retrieve","send_compressed","send_compression_encodings","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_interceptor","UserInterceptedClient","make_client","user_client","user_server","UserClient","accept_compressed","borrow","borrow_mut","clone","clone_into","connect","delete","fmt","from","index","inner","into","into_request","new","send_compressed","show","store","to_owned","try_from","try_into","type_id","update","vzip","with_interceptor","with_origin","0","User","UserServer","_Inner","accept_compressed","accept_compression_encodings","borrow","borrow","borrow_mut","borrow_mut","call","call","clone","clone","clone_into","clone_into","delete","fmt","fmt","from","from","from_arc","index","inner","into","into","into_request","into_request","new","poll_ready","poll_ready","send_compressed","send_compression_encodings","show","store","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update","vzip","vzip","with_interceptor"],"q":["minerva_rpc","","","","","","minerva_rpc::messagesminerva_rpc::metadata","","","","","","","","","","","","","","","","minerva_rpc::products","","","","minerva_rpc::products::products_client","","","","","","","","","","","","","","","","","","","","","","","","","","minerva_rpc::products::products_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","minerva_rpc::session","","","","minerva_rpc::session::session_client","","","","","","","","","","","","","","","","","","","","","","","","minerva_rpc::session::session_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","minerva_rpc::user","","","","minerva_rpc::user::user_client","","","","","","","","","","","","","","","","","","","","","","","","","","minerva_rpc::user::user_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Returns the address of any request’s sender. If …","Structures and algorithms related to all messages that can …","Structures for handling gRPC request metadata.","Structures and algorithms related to a server and a client …","Structures and algorithms related to a server and a client …","Structures and algorithms related to a server and a client …","A message containing the index of an expected entity.","A message containing the index of a page for a list of …","A message describing a product that can be sent back and …","A message containing a list of products.","A message containing data to require a session creation on …","A message containing session data retrieved from the …","A message for returning a session token for the user.","A message describing a user that can be sent back and …","A message containing a list of users of any size.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creation date of the session. Must be informed in Unix …","","","","","","","","","","Description for the product.","Returns the value of <code>email</code>, or the default value if <code>email</code> …","Email for this user. If present, must be unique on the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the value of <code>id</code>, or the default value if <code>id</code> is …","Returns the value of <code>id</code>, or the default value if <code>id</code> is …","ID of the user. Can be ignored when attempting to create …","ID of the product. Can be ignored when attempting to …","Returns the value of <code>index</code>, or the default value if <code>index</code> …","Index of entity to be retrieved.","Index of the entity page to be returned. When not …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Login that uniquely identifie this user.","Login of the user of this tenant that is attempting to …","Login of the session’s user.","Name of this user.","","","","","","","","","","Returns the value of <code>password</code>, or the default value if …","Plain-text password for this user. Must be present when …","Plain-text password of the referred user.","Unit price for this product, with respect to the product’…","Actual list of products retrieved.","Tenant where the session data should be created.","Tenant where the session data exists.","","","","","","","","","","Actual session token data, in Base64 format.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Default unit for the product. Must be a two-character …","Actual list of users retrieved.","","","","","","","","","","Defines the interceptor data for any gRPC client.","","","","Returns the argument unchanged.","Retrieve the string value from a request’s metadata map …","Calls <code>U::from(self)</code>.","","Creates a new <code>ClientInterceptor</code> from given tenant and …","Emplace tenant and requestor information on a request’s …","Requestor of the operation, usually the login of a user.","Tenant related to the database access while on a request.","","","","","Type for a <code>ProductsClient</code> with an interceptor that sends …","Creates a Products client with tenant and requestor …","Generated client implementations.","Generated server implementations.","","Enable decompressing responses.","","","","","Attempt to create a new client by connecting to a given …","Delete a product.","","Returns the argument unchanged.","List all products, given a page index.","","Calls <code>U::from(self)</code>.","","","Compress requests with the given encoding.","Show a specific product, given its index.","Include a new product and return it.","","","","","Update a product and return it.","","","","","Generated trait containing gRPC methods that should be …","","","Enable decompressing requests with the given encoding.","","","","","","","","","","","","Delete a product.","","","Returns the argument unchanged.","Returns the argument unchanged.","","List all products, given a page index.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Compress responses with the given encoding, if the client …","","Show a specific product, given its index.","Include a new product and return it.","","","","","","","","","Update a product and return it.","","","","Type for a <code>SessionClient</code> with an interceptor that sends …","Creates a Session client with tenant and requestor …","Generated client implementations.","Generated server implementations.","","Enable decompressing responses.","","","","","Attempt to create a new client by connecting to a given …","","Returns the argument unchanged.","Generates session data for a user.","","Calls <code>U::from(self)</code>.","","","Removes a session if existing","Retrieves session data from a session token.","Compress requests with the given encoding.","","","","","","","","","Generated trait containing gRPC methods that should be …","","","Enable decompressing requests with the given encoding.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Generates session data for a user.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Removes a session if existing","Retrieves session data from a session token.","Compress responses with the given encoding, if the client …","","","","","","","","","","","","","Type for a <code>UserClient</code> with an interceptor that sends …","Creates a User client with tenant and requestor metadata …","Generated client implementations.","Generated server implementations.","","Enable decompressing responses.","","","","","Attempt to create a new client by connecting to a given …","Delete a user.","","Returns the argument unchanged.","List all users, given a page index.","","Calls <code>U::from(self)</code>.","","","Compress requests with the given encoding.","Show a specific user, given its index.","Include a new user and return it.","","","","","Update a user and return it.","","","","","Generated trait containing gRPC methods that should be …","","","Enable decompressing requests with the given encoding.","","","","","","","","","","","","Delete a user.","","","Returns the argument unchanged.","Returns the argument unchanged.","","List all users, given a page index.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Compress responses with the given encoding, if the client …","","Show a specific user, given its index.","Include a new user and return it.","","","","","","","","","Update a user and return it.","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,4,5,6,7,8,9,10,11,3,4,5,6,7,8,9,10,11,3,4,5,6,7,8,9,10,11,3,4,5,6,7,8,9,10,11,3,4,5,6,7,8,9,10,11,10,3,4,5,6,7,8,9,10,11,7,5,5,3,4,5,6,7,8,9,10,11,3,4,5,6,7,8,9,10,11,3,4,5,6,7,8,9,10,11,3,4,5,6,7,8,9,10,11,5,7,5,7,4,3,4,3,4,5,6,7,8,9,10,11,3,4,5,6,7,8,9,10,11,5,9,10,5,3,4,5,6,7,8,9,10,11,5,5,9,7,8,9,10,3,4,5,6,7,8,9,10,11,11,3,4,5,6,7,8,9,10,11,3,4,5,6,7,8,9,10,11,3,4,5,6,7,8,9,10,11,7,6,3,4,5,6,7,8,9,10,11,0,21,21,21,21,0,21,21,21,0,21,21,21,21,21,21,0,0,0,0,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,37,0,0,0,35,35,37,35,37,35,35,35,37,35,37,35,34,37,35,37,35,35,34,35,37,35,37,35,35,35,35,35,35,34,34,37,35,37,35,37,35,37,35,34,37,35,35,0,0,0,0,0,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,46,0,0,0,45,45,46,45,46,45,45,45,46,45,46,45,46,45,46,45,45,44,45,46,45,46,45,45,45,45,44,44,45,45,46,45,46,45,46,45,46,45,46,45,45,0,0,0,0,0,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,50,0,0,0,49,49,50,49,50,49,49,49,50,49,50,49,48,50,49,50,49,49,48,49,50,49,50,49,49,49,49,49,49,48,48,50,49,50,49,50,49,50,49,48,50,49,49],"f":[[1,2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3],[4],[5],[6],[7],[8],[9],[10],[11],[3,3],[4,4],[5,5],[6,6],[7,7],[8,8],[9,9],[10,10],[11,11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],3],[[],4],[[],5],[[],6],[[],7],[[],8],[[],9],[[],10],[[],11],0,[5,12],0,[3,13],[4,13],[5,13],[6,13],[7,13],[8,13],[9,13],[10,13],[11,13],[[3,3],14],[[4,4],14],[[5,5],14],[[6,6],14],[[7,7],14],[[8,8],14],[[9,9],14],[[10,10],14],[[11,11],14],[[3,15],16],[[4,15],16],[[5,15],16],[[6,15],16],[[7,15],16],[[8,15],16],[[9,15],16],[[10,15],16],[[11,15],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,17],[7,17],0,0,[4,18],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],0,0,0,0,[[3,3],14],[[4,4],14],[[5,5],14],[[6,6],14],[[7,7],14],[[8,8],14],[[9,9],14],[[10,10],14],[[11,11],14],[5,12],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[21,1],[[19,[1,22]]]],[[]],[[23,12],[[25,[24]]]],[[]],[[],1],[[12,12],21],[[1,12,12],[[19,[24]]]],0,0,[[],19],[[],19],[[],20],[[]],0,[[24,24,24],26],0,0,0,[[27,28],27],[[]],[[]],[[[27,[29]]],[[27,[29]]]],[[]],[[],26],[[27,[30,[3]]],26],[[[27,[31]],15],16],[[]],[[27,[30,[4]]],26],0,[[]],[[],1],[[],27],[[27,28],27],[[27,[30,[3]]],26],[[27,[30,[7]]],26],[[]],[[],19],[[],19],[[],20],[[27,[30,[7]]],26],[[]],[[],[[27,[32]]]],[33,27],0,0,0,0,[[[35,[34]],28],[[35,[34]]]],0,[[]],[[]],[[]],[[]],[[35,36]],[36],[[[37,[34]]],[[37,[34]]]],[[[35,[34]]],[[35,[34]]]],[[]],[[]],[[[1,[3]]],[[39,[[38,[26]]]]]],[[[37,[31]],15],16],[[[35,[[0,[31,34]]]],15],16],[[]],[[]],[[[40,[34]]],[[35,[34]]]],[[[1,[4]]],[[39,[[38,[26]]]]]],0,[[]],[[]],[[],1],[[],1],[34,[[35,[34]]]],[41,[[42,[19]]]],[[35,41],[[42,[19]]]],[[[35,[34]],28],[[35,[34]]]],0,[[[1,[3]]],[[39,[[38,[26]]]]]],[[[1,[7]]],[[39,[[38,[26]]]]]],[[]],[[]],[[],19],[[],19],[[],19],[[],19],[[],20],[[],20],[[[1,[7]]],[[39,[[38,[26]]]]]],[[]],[[]],[34,[[32,[[35,[34]]]]]],0,[[24,24,24],26],0,0,0,[[43,28],43],[[]],[[]],[[[43,[29]]],[[43,[29]]]],[[]],[[],26],[[[43,[31]],15],16],[[]],[[43,[30,[9]]],26],0,[[]],[[],1],[[],43],[[43,[30,[11]]],26],[[43,[30,[11]]],26],[[43,28],43],[[]],[[],19],[[],19],[[],20],[[]],[[],[[43,[32]]]],[33,43],0,0,0,0,[[[45,[44]],28],[[45,[44]]]],0,[[]],[[]],[[]],[[]],[36],[[45,36]],[[[46,[44]]],[[46,[44]]]],[[[45,[44]]],[[45,[44]]]],[[]],[[]],[[[46,[31]],15],16],[[[45,[[0,[31,44]]]],15],16],[[]],[[]],[[[40,[44]]],[[45,[44]]]],[[[1,[9]]],[[39,[[38,[26]]]]]],0,[[]],[[]],[[],1],[[],1],[44,[[45,[44]]]],[[45,41],[[42,[19]]]],[41,[[42,[19]]]],[[[1,[11]]],[[39,[[38,[26]]]]]],[[[1,[11]]],[[39,[[38,[26]]]]]],[[[45,[44]],28],[[45,[44]]]],0,[[]],[[]],[[],19],[[],19],[[],19],[[],19],[[],20],[[],20],[[]],[[]],[44,[[32,[[45,[44]]]]]],0,[[24,24,24],26],0,0,0,[[47,28],47],[[]],[[]],[[[47,[29]]],[[47,[29]]]],[[]],[[],26],[[47,[30,[3]]],26],[[[47,[31]],15],16],[[]],[[47,[30,[4]]],26],0,[[]],[[],1],[[],47],[[47,28],47],[[47,[30,[3]]],26],[[47,[30,[5]]],26],[[]],[[],19],[[],19],[[],20],[[47,[30,[5]]],26],[[]],[[],[[47,[32]]]],[33,47],0,0,0,0,[[[49,[48]],28],[[49,[48]]]],0,[[]],[[]],[[]],[[]],[[49,36]],[36],[[[50,[48]]],[[50,[48]]]],[[[49,[48]]],[[49,[48]]]],[[]],[[]],[[[1,[3]]],[[39,[[38,[26]]]]]],[[[50,[31]],15],16],[[[49,[[0,[31,48]]]],15],16],[[]],[[]],[[[40,[48]]],[[49,[48]]]],[[[1,[4]]],[[39,[[38,[26]]]]]],0,[[]],[[]],[[],1],[[],1],[48,[[49,[48]]]],[41,[[42,[19]]]],[[49,41],[[42,[19]]]],[[[49,[48]],28],[[49,[48]]]],0,[[[1,[3]]],[[39,[[38,[26]]]]]],[[[1,[5]]],[[39,[[38,[26]]]]]],[[]],[[]],[[],19],[[],19],[[],19],[[],19],[[],20],[[],20],[[[1,[5]]],[[39,[[38,[26]]]]]],[[]],[[]],[48,[[32,[[49,[48]]]]]]],"p":[[3,"Request"],[4,"SocketAddr"],[3,"EntityIndex"],[3,"PageIndex"],[3,"User"],[3,"UserList"],[3,"Product"],[3,"ProductList"],[3,"SessionCreationData"],[3,"SessionData"],[3,"SessionToken"],[15,"str"],[15,"usize"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"i32"],[15,"i64"],[4,"Result"],[3,"TypeId"],[3,"ClientInterceptor"],[3,"Status"],[3,"MetadataMap"],[3,"String"],[4,"Option"],[8,"Future"],[3,"ProductsClient"],[4,"CompressionEncoding"],[8,"Clone"],[8,"IntoRequest"],[8,"Debug"],[3,"InterceptedService"],[3,"Uri"],[8,"Products"],[3,"ProductsServer"],[3,"Request"],[3,"_Inner"],[3,"Box"],[3,"Pin"],[3,"Arc"],[3,"Context"],[4,"Poll"],[3,"SessionClient"],[8,"Session"],[3,"SessionServer"],[3,"_Inner"],[3,"UserClient"],[8,"User"],[3,"UserServer"],[3,"_Inner"]]},\
"minerva_runonce":{"doc":"Minerva System: RUNONCE Service","t":[0,0,5,0,0,5,5,5,5,17,3,3,11,11,11,11,11,11,11,11,11,11,11,5,11,5,11,11,11,11,11,11,12,11,12,11,11,5,5,5,5,5],"n":["database","embedded_migrations","main","mongo","rabbitmq","create_admin_user","create_database","database_spinlock","run_migrations","ALL_MIGRATIONS","EmbeddedMigration","_Dummy","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","into_request","into_request","revert","run","run","run_with_output","try_from","try_from","try_into","try_into","type_id","type_id","up_sql","version","version","vzip","vzip","database_spinlock","prepare_database","broker_spinlock","create_default_queues","create_virtual_host"],"q":["minerva_runonce","","","","","minerva_runonce::database","","","","minerva_runonce::embedded_migrations","","","","","","","","","","","","","","","","","","","","","","","","","","","","minerva_runonce::mongo","","minerva_runonce::rabbitmq","",""],"d":["This module wraps all functions related to operations that …","","Entry point for this service.","This module wraps all functions related to operations that …","This module wraps all functions related to operations that …","Create an Administrator user (login “admin”) for a …","Create a database for a specific tenant, if it doesn’t …","Awaits for database availability on a spinlock.","Run pending database migrations for a specific tenant. …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Awaits for non-relational database availability on a …","Prepares the non-relational database collections with …","Awaits for message broker availability on a spinlock.","Create default queues for a given virtual host on the …","Creates a virtual host for the current tenant on the …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,12,7,12,7,12,7,12,7,12,7,7,0,7,0,12,7,12,7,12,7,7,7,7,12,7,0,0,0,0,0],"f":[0,0,[[],[[3,[[2,[1]]]]]],0,0,[[4,4]],[[4,4]],[4,5],[[4,4]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[7,8],[[3,[9]]]],[[],[[3,[9]]]],[[7,8],[[3,[9]]]],[10,[[3,[9]]]],[[],3],[[],3],[[],3],[[],3],[[],11],[[],11],0,[7,4],0,[[]],[[]],[4,5],[[4,4],5],[4,5],[[4,4],5],[[4,4],5]],"p":[[8,"Error"],[3,"Box"],[4,"Result"],[15,"str"],[8,"Future"],[3,"Request"],[3,"EmbeddedMigration"],[8,"SimpleConnection"],[4,"RunMigrationsError"],[8,"Write"],[3,"TypeId"],[3,"_Dummy"]]},\
"minerva_session":{"doc":"Minerva System: SESSION Service","t":[5,0,0,5,5,5,3,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11],"n":["main","repository","service","create_session","recover_session","remove_session","SessionService","borrow","borrow_mut","clone","clone_into","from","generate","into","into_request","pools","remove","retrieve","to_owned","try_from","try_into","type_id","vzip"],"q":["minerva_session","","","minerva_session::repository","","","minerva_session::service","","","","","","","","","","","","","","","",""],"d":["Entry point for this module.","This module wraps the repository which handles the session …","This module contains the actual implementation for the …","Creates a new session for a user. Given the data for a new …","Recovers a user’s session from the non-relational …","Removes a user session from non-relational database, given …","Represents a gRPC service for session.","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Holds database (relational and non-relational) connection …","","","","","","",""],"i":[0,0,0,0,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"f":[[[],[[3,[[2,[1]]]]]],0,0,[[4,5,6,7,8],9],[[4,10,7,8],9],[[4,10,6,7,8],9],0,[[]],[[]],[11,11],[[]],[[]],[[11,[13,[12]]],[[14,[[2,[9]]]]]],[[]],[[],13],0,[[11,[13,[15]]],[[14,[[2,[9]]]]]],[[11,[13,[15]]],[[14,[[2,[9]]]]]],[[]],[[],3],[[],3],[[],16],[[]]],"p":[[8,"Error"],[3,"Box"],[4,"Result"],[15,"str"],[3,"NewSession"],[6,"DBPool"],[3,"Database"],[3,"Client"],[8,"Future"],[3,"String"],[3,"SessionService"],[3,"SessionCreationData"],[3,"Request"],[3,"Pin"],[3,"SessionToken"],[3,"TypeId"]]},\
"minerva_stock":{"doc":"Minerva System: STOCK Service","t":[5],"n":["main"],"q":["minerva_stock"],"d":[""],"i":[0],"f":[[[],[[3,[[2,[1]]]]]]],"p":[[8,"Error"],[3,"Box"],[4,"Result"]]},\
"minerva_user":{"doc":"Minerva System: USER Service","t":[5,0,0,17,5,5,5,5,5,3,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11],"n":["main","repository","service","USER_PAGE_SIZE","add_user","delete_user","get_list","get_user","update_user","UserService","borrow","borrow_mut","clone","clone_into","delete","from","index","into","into_request","pools","show","store","to_owned","try_from","try_into","type_id","update","vzip"],"q":["minerva_user","","","minerva_user::repository","","","","","","minerva_user::service","","","","","","","","","","","","","","","","","",""],"d":["","This module wraps the repository which handles the user …","This module contains the actual implementation for the <code>User</code>…","Default page size of a user list.","Creates a new user, for a given requestor, which shall …","Deletes a user, for a given requestor, which shall also be …","Grabs a list of users, paged. Expects a page number. If …","Grabs a specific user, given its ID on the database.","Updates the data for a user, for a given requestor, which …","Represents a gRPC service for user.","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Holds database connection pools for all tenants.","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16],"f":[[[],[[3,[[2,[1]]]]]],0,0,0,[[4,5,6],[[3,[7,8]]]],[[9,5,10,11],12],[[13,6],[[3,[[14,[7]],8]]]],[[9,6],[[3,[[15,[7]],8]]]],[[7,5,6],[[3,[7,8]]]],0,[[]],[[]],[16,16],[[]],[[16,[18,[17]]],[[19,[[2,[12]]]]]],[[]],[[16,[18,[20]]],[[19,[[2,[12]]]]]],[[]],[[],18],0,[[16,[18,[17]]],[[19,[[2,[12]]]]]],[[16,[18,[21]]],[[19,[[2,[12]]]]]],[[]],[[],3],[[],3],[[],22],[[16,[18,[21]]],[[19,[[2,[12]]]]]],[[]]],"p":[[8,"Error"],[3,"Box"],[4,"Result"],[3,"NewUser"],[3,"String"],[6,"DBConnection"],[3,"User"],[4,"Error"],[15,"i32"],[6,"DBPool"],[3,"Connection"],[8,"Future"],[15,"i64"],[3,"Vec"],[4,"Option"],[3,"UserService"],[3,"EntityIndex"],[3,"Request"],[3,"Pin"],[3,"PageIndex"],[3,"User"],[3,"TypeId"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
