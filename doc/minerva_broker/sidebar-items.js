window.SIDEBAR_ITEMS = {"constant":[["AUTH_PASS","Default password for authentication on RabbitMQ."],["AUTH_USER","Default user for authentication on RabbitMQ."],["QUEUES","Names of default queues that should be present on RabbitMQ, for each tenant."]],"fn":[["build_broker_uri","Builds an AMQP protocol URI for RabbitMQ. If `vhost` is an empty string, assumes that the connection string should be to the default virtual host."],["check_virtual_host","Checks whether RabbitMQ can be accessed or not."],["make_connection","Attempts to create a single connection to RabbitMQ. If the `vhost` is set to `None`, assumes that the connection should be established to the default virtual host."],["make_connection_pool","Creates a connection pool to RabbitMQ. If the `vhost` is set to `None`, assumes that the connection should be established to the default virtual host."],["make_vhost_url","Generate connection URL to a vhost configuration API."],["make_virtual_host","Creates a virtual host on RabbitMQ. Virtual hosts are created by performing a PUT request on the management API. If the request does not return an error, returns an optional boolean. This result should be `None` if the request was unsuccessful, or `true` or `false` depending on whether the virtual host was created or not. This value is `true` if the request results in a 201 status, or `false` if the result had a status of 204."]],"mod":[["model","This submodule describes models for messages that can be enqueued on RabbitMQ. Their default queueing format is serialized as JSON strings."]],"type":[["LapinPool","Represents a pool of connections to RabbitMQ."]]};